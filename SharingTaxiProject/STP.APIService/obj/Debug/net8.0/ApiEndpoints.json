[
  {
    "ContainingType": "STP.API.Controllers.AreaController",
    "Method": "GetAreas",
    "RelativePath": "api/Area",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.AreaController",
    "Method": "CreateArea",
    "RelativePath": "api/Area",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "areaDto",
        "Type": "STP.API.Controllers.AreaCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.AreaController",
    "Method": "GetArea",
    "RelativePath": "api/Area/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.AreaController",
    "Method": "UpdateArea",
    "RelativePath": "api/Area/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "areaDto",
        "Type": "STP.API.Controllers.AreaUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.BookingController",
    "Method": "CheckTripFull",
    "RelativePath": "api/Booking/checkTripFull/{tripId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tripId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.BookingController",
    "Method": "JoinTrip",
    "RelativePath": "api/Booking/joinTrip",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "STP.API.Controllers.JoinTripRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.BookingController",
    "Method": "OutTrip",
    "RelativePath": "api/Booking/outTrip",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "STP.API.Controllers.OutTripRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.BookingController",
    "Method": "GetUsersInTrip",
    "RelativePath": "api/Booking/usersInTrip/{tripId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tripId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.CarTripController",
    "Method": "GetCarTrips",
    "RelativePath": "api/CarTrip",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.CarTripController",
    "Method": "CreateCarTrip",
    "RelativePath": "api/CarTrip",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "carTripDto",
        "Type": "STP.API.Controllers.CarTripCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.CarTripController",
    "Method": "GetCarTrip",
    "RelativePath": "api/CarTrip/{tripId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tripId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.CarTripController",
    "Method": "UpdateCarTrip",
    "RelativePath": "api/CarTrip/{tripId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tripId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      },
      {
        "Name": "carTripDto",
        "Type": "STP.API.Controllers.CarTripUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FinanceController",
    "Method": "GetTopDepositorsAsync",
    "RelativePath": "api/Finance/top-depositors",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "topCount",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FinanceController",
    "Method": "GetTotalDepositsAsync",
    "RelativePath": "api/Finance/total-deposits",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Decimal",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FinanceController",
    "Method": "GetTotalRevenue",
    "RelativePath": "api/Finance/total-revenue",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Decimal",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "STP.API.Controllers.GoogleLoginController",
    "Method": "GoogleCallback",
    "RelativePath": "api/GoogleLogin/google-callback",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.GoogleLoginController",
    "Method": "SignInGoogle",
    "RelativePath": "api/GoogleLogin/signin-google",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.LocationController",
    "Method": "GetLocations",
    "RelativePath": "api/Location",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[STP.Repository.Models.Location, STP.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "STP.APIService.Controllers.LocationController",
    "Method": "AddLocation",
    "RelativePath": "api/Location",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "location",
        "Type": "STP.Repository.Models.Location",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "STP.Repository.Models.Location",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "STP.APIService.Controllers.LocationController",
    "Method": "UpdateLocation",
    "RelativePath": "api/Location/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "location",
        "Type": "STP.Repository.Models.Location",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.LocationController",
    "Method": "DeleteLocation",
    "RelativePath": "api/Location/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.LocationController",
    "Method": "SearchLocations",
    "RelativePath": "api/Location/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[STP.Repository.Models.Location, STP.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "STP.APIService.Controllers.LoginController",
    "Method": "Login",
    "RelativePath": "api/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "STP.APIService.Controllers.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.PasswordResetController",
    "Method": "ResetPassword",
    "RelativePath": "api/PasswordReset/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "STP.API.Controllers.PasswordResetRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.ProfileController",
    "Method": "GetProfile",
    "RelativePath": "api/Profile/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TransactionHistoryController",
    "Method": "GetUserTransactionHistory",
    "RelativePath": "api/TransactionHistory/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripController",
    "Method": "GetTripById",
    "RelativePath": "api/Trip/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripController",
    "Method": "GetAvailableTrips",
    "RelativePath": "api/Trip/availableTrips",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripController",
    "Method": "CreateTrip",
    "RelativePath": "api/Trip/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "STP.API.Controllers.CreateTripRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripController",
    "Method": "GetTripList",
    "RelativePath": "api/Trip/list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripController",
    "Method": "SearchTripsAsync",
    "RelativePath": "api/Trip/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pickUpLocationId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "dropOffLocationId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "bookingDate",
        "Type": "System.Nullable\u00601[[System.DateOnly, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "hourInDay",
        "Type": "System.Nullable\u00601[[System.TimeOnly, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "availableSlots",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripController",
    "Method": "GetTripsByUserId",
    "RelativePath": "api/Trip/TripJoined/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripController",
    "Method": "GetTripStatistics",
    "RelativePath": "api/Trip/TripStatistics",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripController",
    "Method": "UpdateTripStatus",
    "RelativePath": "api/Trip/updateStatus/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "STP.API.Controllers.UpdateTripStatusRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TripCalculatorController",
    "Method": "CalculateTotalCost",
    "RelativePath": "api/TripCalculator/CalculateTotalCost",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fromAreaId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "toAreaId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "minPerson",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "maxPerson",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripTypeController",
    "Method": "GetTripTypes",
    "RelativePath": "api/TripType",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripTypeController",
    "Method": "CreateTripType",
    "RelativePath": "api/TripType",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tripTypeDto",
        "Type": "STP.API.Controllers.TripTypeCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripTypeController",
    "Method": "GetTripType",
    "RelativePath": "api/TripType/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripTypeController",
    "Method": "UpdateTripType",
    "RelativePath": "api/TripType/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "tripTypeDto",
        "Type": "STP.API.Controllers.TripTypeUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripTypePricingController",
    "Method": "GetAllTripTypePricings",
    "RelativePath": "api/TripTypePricing",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripTypePricingController",
    "Method": "CreateTripTypePricing",
    "RelativePath": "api/TripTypePricing",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "TripTypePricingDto",
        "Type": "STP.API.Controllers.TripTypePricingCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripTypePricingController",
    "Method": "GetTripTypePricingById",
    "RelativePath": "api/TripTypePricing/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripTypePricingController",
    "Method": "UpdateTripTypePricing",
    "RelativePath": "api/TripTypePricing/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "TripTypePricingDto",
        "Type": "STP.API.Controllers.TripTypePricingUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.UserController",
    "Method": "SignUp",
    "RelativePath": "api/User/SignUp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userSignUpDto",
        "Type": "STP.API.Controllers.UserSignUpDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/UpdateUser{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateUserDto",
        "Type": "STP.API.Controllers.UpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.UserController",
    "Method": "UpdateUserAdmin",
    "RelativePath": "api/User/UpdateUserAdmin/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateUserDto",
        "Type": "STP.API.Controllers.UpdateUserDtoForAdmin",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/User/User List",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.WalletController",
    "Method": "GetWalletBalance",
    "RelativePath": "api/Wallet/balance/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.WalletController",
    "Method": "Deposit",
    "RelativePath": "api/Wallet/Deposit",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "walletId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "amount",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "method",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.WalletController",
    "Method": "PayForTrip",
    "RelativePath": "api/Wallet/PayForTrip",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tripId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.WalletController",
    "Method": "RefundOnLeaveTrip",
    "RelativePath": "api/Wallet/RefundOnLeaveTrip",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "tripId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.WalletController",
    "Method": "RefundTrip",
    "RelativePath": "api/Wallet/RefundTrip",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tripId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[STP.APIService.WeatherForecast, STP.APIService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]