[
  {
    "ContainingType": "STP.APIService.Controllers.LocationController",
    "Method": "GetLocations",
    "RelativePath": "api/Location",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[STP.Repository.Models.Location, STP.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "STP.APIService.Controllers.LocationController",
    "Method": "AddLocation",
    "RelativePath": "api/Location",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "location",
        "Type": "STP.Repository.Models.Location",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "STP.Repository.Models.Location",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "STP.APIService.Controllers.LocationController",
    "Method": "UpdateLocation",
    "RelativePath": "api/Location/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "location",
        "Type": "STP.Repository.Models.Location",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.LocationController",
    "Method": "DeleteLocation",
    "RelativePath": "api/Location/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.LocationController",
    "Method": "SearchLocations",
    "RelativePath": "api/Location/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[STP.Repository.Models.Location, STP.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "STP.APIService.Controllers.LoginController",
    "Method": "Login",
    "RelativePath": "api/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "STP.APIService.Controllers.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.ProfileController",
    "Method": "GetProfile",
    "RelativePath": "api/Profile/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.TripController",
    "Method": "CreateTrip",
    "RelativePath": "api/Trip/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "STP.API.Controllers.CreateTripRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TripCalculatorController",
    "Method": "CalculateTotalCost",
    "RelativePath": "api/TripCalculator/CalculateTotalCost",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fromAreaId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "toAreaId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "minPerson",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "maxPerson",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.UserController",
    "Method": "SignUp",
    "RelativePath": "api/User/SignUp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userSignUpDto",
        "Type": "STP.API.Controllers.UserSignUpDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/UpdateUser{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateUserDto",
        "Type": "STP.API.Controllers.UpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.UserController",
    "Method": "UpdateUserAdmin",
    "RelativePath": "api/User/UpdateUserAdmin/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateUserDto",
        "Type": "STP.API.Controllers.UpdateUserDtoForAdmin",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.API.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/User/User List",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "STP.APIService.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[STP.APIService.WeatherForecast, STP.APIService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]