// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace STP.Repository.Models;

public partial class ShareTaxiContext : DbContext
{
    public ShareTaxiContext() { }
    public ShareTaxiContext(DbContextOptions<ShareTaxiContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Area> Areas { get; set; }

    public virtual DbSet<Booking> Bookings { get; set; }

    public virtual DbSet<CarTrip> CarTrips { get; set; }

    public virtual DbSet<Deposit> Deposits { get; set; }

    public virtual DbSet<Location> Locations { get; set; }

    public virtual DbSet<Transaction> Transactions { get; set; }

    public virtual DbSet<Trip> Trips { get; set; }

    public virtual DbSet<TripType> TripTypes { get; set; }

    public virtual DbSet<TripeTypePricing> TripeTypePricings { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<Wallet> Wallets { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Area>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Area__3214EC07CAE89BF7");

            entity.ToTable("Area");

            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Name).HasMaxLength(255);
        });

        modelBuilder.Entity<Booking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Booking__3214EC0763EB8E6B");

            entity.ToTable("Booking");

            entity.HasOne(d => d.Trip).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.TripId)
                .HasConstraintName("FK__Booking__TripId__37A5467C");

            entity.HasOne(d => d.User).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Booking__UserId__38996AB5");
        });

        modelBuilder.Entity<CarTrip>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CarTrip__3214EC0793EC464B");

            entity.ToTable("CarTrip");

            entity.Property(e => e.DriverName).HasMaxLength(255);
            entity.Property(e => e.DriverPhone).HasMaxLength(255);
            entity.Property(e => e.PlateNumber).HasMaxLength(255);

            entity.HasOne(d => d.Trip).WithMany(p => p.CarTrips)
                .HasForeignKey(d => d.TripId)
                .HasConstraintName("FK__CarTrip__TripId__398D8EEE");
        });

        modelBuilder.Entity<Deposit>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Deposit__3214EC0717761347");

            entity.ToTable("Deposit");

            entity.Property(e => e.Amount).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.DepositDate).HasColumnType("datetime");
            entity.Property(e => e.DepositMethod).HasMaxLength(255);

            entity.HasOne(d => d.User).WithMany(p => p.Deposits)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Deposit__UserId__3A81B327");

            entity.HasOne(d => d.Wallet).WithMany(p => p.Deposits)
                .HasForeignKey(d => d.WalletId)
                .HasConstraintName("FK__Deposit__WalletI__3B75D760");
        });

        modelBuilder.Entity<Location>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Location__3214EC0757062A9D");

            entity.ToTable("Location");

            entity.Property(e => e.Lat).HasColumnType("decimal(10, 8)");
            entity.Property(e => e.Lon).HasColumnType("decimal(11, 8)");
            entity.Property(e => e.Name).HasMaxLength(255);

            entity.HasOne(d => d.Area).WithMany(p => p.Locations)
                .HasForeignKey(d => d.AreaId)
                .HasConstraintName("FK__Location__AreaId__3C69FB99");
        });

        modelBuilder.Entity<Transaction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Transact__3214EC0753E4BED1");

            entity.ToTable("Transaction");

            entity.Property(e => e.Amount).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.ReferenceId).HasMaxLength(255);
            entity.Property(e => e.TransactionType).HasMaxLength(255);

            entity.HasOne(d => d.Deposit).WithMany(p => p.Transactions)
                .HasForeignKey(d => d.DepositId)
                .HasConstraintName("FK_Transaction_Deposit");

            entity.HasOne(d => d.Wallet).WithMany(p => p.Transactions)
                .HasForeignKey(d => d.WalletId)
                .HasConstraintName("FK__Transacti__Walle__3E52440B");
        });

        modelBuilder.Entity<Trip>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Trip__3214EC07EBFD2347");

            entity.ToTable("Trip");

            entity.Property(e => e.BookingDate).HasColumnType("datetime");
            entity.Property(e => e.DropOffLocationId).HasColumnName("dropOffLocationId");
            entity.Property(e => e.PickUpLocationId).HasColumnName("pickUpLocationId");
            entity.Property(e => e.UnitPrice).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.DropOffLocation).WithMany(p => p.TripDropOffLocations)
                .HasForeignKey(d => d.DropOffLocationId)
                .HasConstraintName("FK__Trip__dropOffLoc__3F466844");

            entity.HasOne(d => d.PickUpLocation).WithMany(p => p.TripPickUpLocations)
                .HasForeignKey(d => d.PickUpLocationId)
                .HasConstraintName("FK__Trip__pickUpLoca__403A8C7D");

            entity.HasOne(d => d.TripType).WithMany(p => p.Trips)
                .HasForeignKey(d => d.TripTypeId)
                .HasConstraintName("FK_Trip_TripType");
        });

        modelBuilder.Entity<TripType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TripType__3214EC070242C8F9");

            entity.ToTable("TripType");

            entity.Property(e => e.BasicePrice).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<TripeTypePricing>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TripeTyp__3214EC0705F606D8");

            entity.ToTable("TripeTypePricing");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.PricePerPerson).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.TripTypeNavigation).WithMany(p => p.TripeTypePricings)
                .HasForeignKey(d => d.TripType)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TripTypePricing_TripType");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__User__3214EC07FF3406D1");

            entity.ToTable("User");

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(255);
            entity.Property(e => e.Name).HasMaxLength(255);
            entity.Property(e => e.Password).HasMaxLength(255);
            entity.Property(e => e.PhoneNumber).HasMaxLength(255);
            entity.Property(e => e.Role).HasMaxLength(255);
        });

        modelBuilder.Entity<Wallet>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Wallet__3214EC07F5DD1946");

            entity.ToTable("Wallet");

            entity.Property(e => e.Balance).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.CurrencyCode).HasMaxLength(255);
            entity.Property(e => e.UpdatedAt).HasColumnType("datetime");

            entity.HasOne(d => d.User).WithMany(p => p.Wallets)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Wallet__UserId__4316F928");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}